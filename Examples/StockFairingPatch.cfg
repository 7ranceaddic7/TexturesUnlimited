KSP_TEXTURE_SET
{
	name = StockFairingsWhite
	//0'th material is always applied to fairing panels in this case due to plugin code
	MATERIAL
	{
		shader = TU/Metallic
		//no mesh= needed due to special handling in the TUPartVariant PartModule
		//but also need to exclude the other meshes from being targetted
		excludeMesh = whateverTheFairingBaseMeshNameIs
		excludeMesh = whateverTheTrussNameIs
		texture = _MainTex,Squad/Parts/Aero/fairings/fairings_diff
		texture = _BumpMap,Squad/Parts/Aero/fairings/fairings_normals
	}
	//this one is for the fairing base, it does need 'mesh =' to target only the base mesh
	MATERIAL
	{
		shader = TU/Metallic
		mesh = whateverTheFairingBaseMeshNameIs
		texture = _MainTex,Squad/Parts/Aero/fairings/FairingBase
		texture = _BumpMap,Squad/Parts/Aero/fairings/FairingBaseNormals
	}
	//this texture-set is for the truss setup, it also needs 'mesh=' to target the base mesh
	MATERIAL
	{
		shader = TU/Metallic
		mesh = whateverTheTrussNameIs
		texture = _MainTex,Squad/Parts/Aero/fairings/AutoTruss
	}
}
+KSP_TEXTURE_SET[StockFairingsWhite]
{
	@name = StockFairingsGrey
	@MATERIAL,0
	{
		@texture,0 = _MainTex,Squad/Parts/Aero/fairings/fairings_diff_grey
		@texture,1 = _BumpMap,Squad/Parts/Aero/fairings/fairings_grey_normals
	}	
}
+KSP_TEXTURE_SET[StockFairingsWhite]
{
	@name = StockFairingsDkGrey
	@MATERIAL,0
	{
		@texture,0 = _MainTex,Squad/Parts/Aero/fairings/fairings_diff_orange
		@texture,1 = _BumpMap,Squad/Parts/Aero/fairings/fairings_orange_normals
	}	
}
@PART[fairingSize1]
{
	//patch existing stock module with new info
	@MODULE[ModulePartVariants]
	{
		//remove existing textures and info -- TU will handle that end of things
		// new info will be provided below
		@VARIANT,*
		{
			-TEXTURE{}
			-EXTRA_INFO{}
		}
		//patch new info into existing variants to point towards the TU TextureSet
		//that will be used to handle each variants material setup
		@VARIANT[White]
		{
			EXTRA_INFO
			{
				TU_TextureSet = StockFairingsWhite
			}
		}
		@VARIANT[Grey]
		{
			EXTRA_INFO
			{
				TU_TextureSet = StockFairingsGrey
			}
		}
		@VARIANT[Dark?Grey]
		{
			EXTRA_INFO
			{
				TU_TextureSet = StockFairingsDkGrey
			}
		}
	}
	//add the TU PartModule that handles interaction with stock part-variants
	// specify that we want fairing integration - this triggers special plugin code
	// to work with the stock fairing module and its procedural meshes.
	MODULE	
	{
		name = TUPartVariant
		stockFairing = true
	}
}